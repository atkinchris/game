{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/mapToEntities.js","webpack:///./src/types/zone.js","webpack:///./src/types/world.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","map","entities","y","length","row","x","cell","push","blocked","ZONE_SIZE","Zone","worldX","worldY","_classCallCheck","this","cells","addEntity","height","width","entity","hash","toLocalHash","values","_ref","_zone","World","zones","zone","_zone2","default","zX","Math","floor","zY","find","z","console","log","addZone","canvas","document","getElementById","context","getContext","world","_world2","_mapToEntities2","_map2","forEach","clearRect","translate","getZones","zoneIndex","concat","getEntities","entityIndex","fillStyle","fillRect","_zones$_zoneIndex$get","getBounds","strokeStyle","lineWidth","rect","stroke","render"],"mappings":"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","file":"main.121eba31.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const mapToEntities = (map) => {\n  const entities = []\n\n  for (let y = 0; y < map.length; y += 1) {\n    const row = map[y]\n\n    for (let x = 0; x < row.length; x += 1) {\n      const cell = row[x]\n      entities.push({ x, y, blocked: cell === 1 })\n    }\n  }\n\n  return entities\n}\n\nexport default mapToEntities\n","export const ZONE_SIZE = 14\n\nclass Zone {\n  constructor(worldX, worldY) {\n    this.worldX = worldX\n    this.worldY = worldY\n    this.cells = {}\n\n    for (let y = 0; y < ZONE_SIZE; y += 1) {\n      for (let x = 0; x < ZONE_SIZE; x += 1) {\n        this.addEntity({\n          blocked: false,\n          x: (this.worldX * ZONE_SIZE) + x,\n          y: (this.worldY * ZONE_SIZE) + y,\n        })\n      }\n    }\n  }\n\n  getBounds() {\n    return {\n      x: this.worldX * ZONE_SIZE,\n      y: this.worldY * ZONE_SIZE,\n      height: ZONE_SIZE,\n      width: ZONE_SIZE,\n    }\n  }\n\n  addEntity(entity) {\n    const hash = Zone.toLocalHash(entity)\n    this.cells[hash] = entity\n    return entity\n  }\n\n  getEntities() {\n    return Object.values(this.cells)\n  }\n\n  static toLocalHash({ x, y }) {\n    const localX = x % ZONE_SIZE\n    const localY = y % ZONE_SIZE\n\n    return (localY * ZONE_SIZE) + localX\n  }\n}\n\nexport default Zone\n","import Zone, { ZONE_SIZE } from './zone'\n\nclass World {\n  constructor() {\n    this.zones = []\n  }\n\n  addZone(x, y) {\n    const zone = new Zone(x, y)\n    this.zones.push(zone)\n    return zone\n  }\n\n  addEntity(entity) {\n    const zX = Math.floor(entity.x / ZONE_SIZE)\n    const zY = Math.floor(entity.y / ZONE_SIZE)\n    let zone = this.zones.find(z => z.worldX === zX && z.worldY === zY)\n\n    if (!zone) {\n      console.log(`Zone at {${zX}, ${zY}} did not exist; creating...`)\n      zone = this.addZone(zX, zY)\n    }\n\n    return zone.addEntity(entity)\n  }\n\n  getZones() {\n    return this.zones\n  }\n}\n\nexport default World\n","import World from './types/world'\nimport mapToEntities from './utils/mapToEntities'\nimport map from './map.json'\n\nconst TILE_SIZE = 16\n\nconst canvas = document.getElementById('canvas')\nconst context = canvas.getContext('2d')\n\nconst world = new World()\nmapToEntities(map).forEach(entity => world.addEntity(entity))\n\nconst render = () => {\n  context.clearRect(0, 0, canvas.width, canvas.height)\n  context.translate(10, 10)\n\n  const zones = world.getZones()\n  let entities = []\n\n  for (let zoneIndex = 0; zoneIndex < zones.length; zoneIndex += 1) {\n    entities = entities.concat(zones[zoneIndex].getEntities())\n  }\n\n  for (let entityIndex = 0; entityIndex < entities.length; entityIndex += 1) {\n    const entity = entities[entityIndex]\n\n    context.fillStyle = entity.blocked ? '#333' : '#eee'\n    context.fillRect(entity.x * TILE_SIZE, entity.y * TILE_SIZE, TILE_SIZE, TILE_SIZE)\n  }\n\n  for (let zoneIndex = 0; zoneIndex < zones.length; zoneIndex += 1) {\n    const { x, y, width, height } = zones[zoneIndex].getBounds()\n\n    context.strokeStyle = 'blue'\n    context.lineWidth = '5'\n    context.rect(\n      x * TILE_SIZE,\n      y * TILE_SIZE,\n      width * TILE_SIZE,\n      height * TILE_SIZE,\n    )\n    context.stroke()\n  }\n}\n\nrender()\n"],"sourceRoot":""}